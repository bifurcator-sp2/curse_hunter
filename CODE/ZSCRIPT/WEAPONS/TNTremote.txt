Class z_TNTremote : CustomInventory
{
	default
	{
		inventory.pickupmessage "$TNT_REMOTE_TAKED";
		inventory.pickupsound "dsammoup";
		inventory.amount 1;
		inventory.maxamount 50;
		inventory.icon "REPKA0";
		TAG "$TNT_REMOTE_NAME";
		-NOGRAVITY;
		Scale 0.5;
		+SHOOTABLE;
		+NOBLOOD;
		+NOBLOODDECALS;
		+INVULNERABLE;
	}

	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		GiveInventory("Pointable", 1);
	}

	States
	{
		Spawn:
			REPK A -1;
			Stop;
		Pickup:
			TNT1 A 0 A_GiveInventory("TNTremoteAmmo", 1);
			TNT1 A 0 A_GiveInventory("RemoteDynamite", 1);
			Stop;
	}
}


Class RemoteDynamite : CHWeapon
{
	int AltFire;

	default{
		Radius 20;
		Height 16;
		Scale 0.4;
		Weapon.SelectionOrder 800;
		Weapon.kickback 80;
		-NOGRAVITY;
		Weapon.AmmoGive 0;
		Weapon.AmmoGive2 1;
		Weapon.AmmoType "TNTremoteAmmo";
		Weapon.AmmoType2 "TNTremoteFakeAmmo";
		+WEAPON.AMMO_CHECKBOTH;
		Weapon.Ammouse 1;
		Weapon.Ammouse2	1;

		Obituary "$TNT_REMOTE_OBITUARY";
		+Weapon.Explosive;
		+Weapon.NoAutoAim;
		+WEAPON.NOALERT;
	}

	virtual int A_countDropped(){
		ThinkerIterator it = ThinkerIterator.Create("PlayerTNTremote");
		actor remote;
		int i;
		while(remote = actor(it.Next())){
			if(remote.target==owner){i++;}
		}
		return i;
	}

	virtual void A_detonate(){
		ThinkerIterator it = ThinkerIterator.Create("PlayerTNTremote");
		actor remote;
		int i;
		while(remote = actor(it.Next())){
			if(remote.target==owner){
				remote.setStateLabel("Explode");
			}
		}
		if(!countinv("TNTremoteAmmo")){
			owner.takeInventory("TNTremoteFakeAmmo", 1);
		}
	}

	/*override void tick(){
		super.tick();
		a_logint(owner.countinv("TNTremoteFakeAmmo"));
	}*/
	States
	{
		Select:
			TNT1 A 0 A_TakeInventory("ThrowPower",100);
			TNT1 A 0 A_JumpIf(invoker.A_countDropped(), "SelectDetonator");
			DREM ABCDE 1 A_Raise;
			Loop;
		SelectDetonator:
			DRNH ABCDE 1 A_Raise;
			Loop;
		Ready:

			TNT1 A 0 A_TakeInventory("ThrowPower",100);
			TNT1 A 0 A_jumpif(!countinv("TNTremoteAmmo"), 6);
			DREM  ABCDE 3 A_WeaponReady;
			Goto Ready;
			DRNH ABCDE 3 A_WeaponReady;
			//TNT1 A 0 A_JumpIfnoammo("Deselect");
			Loop;
		Deselect:
			TNT1 A 0 A_TakeInventory("ThrowPower",100);
			DRNH A 1 A_Lower;
			Loop;
		DeselectDetonator:
			DREM A 1 A_Lower;
			Loop;
		Fire:
			TNT1 A 0 A_JumpIf(invoker.A_countDropped(), "Detonate");
		AltFire:
			TNT1 A 0 A_jumpif(!countinv("TNTremoteAmmo"), "Ready");
			TNT1 A 0 A_takeInventory("TNTremoteAmmo", 1);
			DREM A 2;
			TNT1 A 0 A_Refire();
			DREM B 1;
			TNT1 A 0 A_Refire();
			Goto Throw;
		Detonate:
			TNT1 A 0 A_jumpif(!countinv("TNTremoteAmmo"), 4);
			TNT1 A 0 A_playSound("tnt/detonate", CHAN_WEAPON);
			DRDT AB 4;
			TNT1 A 0 A_jumpif(countinv("TNTremoteAmmo"), 3);
			DRNH EF 4;
			TNT1 A 0 { invoker.A_detonate(); }
			Goto Ready;
		AltHold:
		Hold:
			DREM  A 3 {A_WeaponReady(14); A_GiveInventory("ThrowPower", 5);}
			TNT1 A 0 A_Refire();
			DREM  B 3 {A_WeaponReady(14); A_GiveInventory("ThrowPower", 5);}
			TNT1 A 0 A_Refire();
			DREM  C 3 {A_WeaponReady(14); A_GiveInventory("ThrowPower", 5);}
			TNT1 A 0 A_Refire();
			DREM  D 3 {A_WeaponReady(14); A_GiveInventory("ThrowPower", 5);}
			TNT1 A 0 A_Refire();
			DREM  E 3 {A_WeaponReady(14); A_GiveInventory("ThrowPower", 5);}
			TNT1 A 0 A_Refire();
			goto Throw;
		Throw:

			DRTS A 2;
			DRTS B 2;
			TNT1 A 0 {
					float xyVel = 30;
					float zVel = 0.5;
					float power = float((CountInv( "ThrowPower" )<=100 ? CountInv( "ThrowPower" ) : 100))/100.0;
					xyVel = xyVel*power-abs(xyVel*power*sin(invoker.pitch));


					A_ThrowGrenadePrecize ("PlayerTNTremote", 8.0, xyVel, zVel, false);
					A_GiveInventory("TNTremoteFakeAmmo", 1);
					invoker.AltFire = 0;
					//A_TakeInventory("TNTremoteAmmo", 1);
					A_TakeInventory("ThrowPower", 100);
				}
			TNT1 A 0 A_PlayWeaponSound("TNTTOSS");

			DRTS CDE 2;
			DRTS EEEEE 2 A_Lower(12);
			goto Select;

  	}
}

class PlayerTNTremote : Actor
{

	default{
		//Decal "Scorch";

		radius 6;
		height 4;
		Scale 0.3;
		PROJECTILE;
		+RANDOMIZE;
		+NOBOUNCESOUND;
		+BOUNCEONFLOORS;
		+BOUNCEONCEILINGS;
		+BOUNCEONWALLS;
		+USEBOUNCESTATE;
	   bouncefactor 0.7;
	   bouncecount 5;
		+PUSHABLE;
		-NOGRAVITY;
		-NOTELEPORT;
		//-NOBLOCKMAP;
		-SOLID;
		//-MISSILE;
		+ThruGhost;
		Gravity 0.56;
		+ShootAble;
		Health 1;
		damage 0;
		Species "PlayerThrough";
		+ThruSpecies;
	}
	Override void Tick()
	{
		Super.Tick();
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
	}
  states
  {

	Spawn:
		RTNT A 2;
		Loop;
	See:
		RTNT A 2;
		Loop;
	Bounce:
		RAIR   ABCDEFGH 4;
		Goto see;
	Death:
		TNT1 A 0 {
			bSHOOTABLE = 1;
			bTHRUACTORS = 1;
			bGHOST = 1;
			actor TT = spawn("PlayerTNTremoteHittarget", pos);
			TT.master = self;
		}
		Goto see;
	Explode:
		"####" "#" 1 a_jump(64, "Explode");
		TNT1 A 0 A_SpawnItemEx("Explosion",0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		stop;
  }
}

class PlayerTNTremoteHittarget : actor
{
	default{
		+ShootAble;
		radius 6;
		height 4;
		Health 1;
		+NOBLOOD;
	}
	states
	{
		spawn:
			TNT1 A 10;
			loop;
		Death:
			TNT1 A 1 {
				if(Master){
					Master.setStateLabel("Explode");
				}
			}
		stop;
	}
}

