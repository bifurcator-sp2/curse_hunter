//see main TNT crazy code in code/decorate

Class z_TNTBundle : CustomInventory
{
	default
	{
		inventory.pickupmessage "$TNT_TAKED";
		inventory.pickupsound "dsammoup";
		inventory.amount 1;
		inventory.maxamount 50;
		inventory.icon "TBNDA0";
		TAG "$TNT_NAME";
		-NOGRAVITY;
		Scale 0.75;
		+SHOOTABLE;
		+NOBLOOD;
		+NOBLOODDECALS;
		+INVULNERABLE;
	}

	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		GiveInventory("Pointable", 1);
	}

	States
	{
		Spawn:
			TBND A -1;
			Stop;
		Pickup:
			TNT1 A 0 A_GiveInventory("TNTAmmo", 1);
			TNT1 A 0 A_GiveInventory("Dynamite", 1);
			Stop;
	}
}
class ThrowPower : Ammo {
	Default
	{
	   inventory.amount 1;
	   inventory.MaxAmount 100;
	   ammo.backpackamount 0;
	   ammo.backpackmaxamount 100;
		+INVENTORY.IGNORESKILL;
	}

}


Class Dynamite : CHWeapon
{
	int AltFire;

	default{
		Radius 20;
		Height 16;
		Scale 0.646;
		Weapon.SelectionOrder 880;

		Inventory.PickUpMessage "Picked up a case of TNT!";
		Inventory.PickUpSound "PICKWEAP";

		Weapon.kickback 80;
		-NOGRAVITY;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "TNTAmmo";
		Weapon.Ammouse 1;
		Weapon.Ammouse2	1;
		Weapon.AmmoType2	"TNTAmmo"	;
		Obituary "%o got a faceful of %k's TNT!"; //Returned the message from blood

		+Weapon.Explosive;
		+Weapon.NoAutoAim;
		+WEAPON.NOALERT;
	}

	override void PostBeginPlay(){
		super.PostBeginPlay();

	}




	Override void Tick()
	{
		Super.Tick();

	}





	States
	{
	Select:
		TNT1 A 0 {Invoker.HandlingControl();}
		TNT1 A 0 a_jumpif(waterlevel>2, "Cannot");
		TNT1 A 0 {
			invoker.AltFire = 0;
			A_TakeInventory("ThrowPower", 100);
		}
		DYNU AAAAAA 1 A_Raise(15);
		Goto Raise;
	Raise:
		DYNU BC 5;
		TNT1 A 0 A_PlayWeaponSound ("dsZIPCLS");
		DYNU D 5;
		TNT1 A 0 GiveInventory("HaveTNT", 1);
	Ready:
		TNT1 A 0 A_TakeInventory("ThrowPower", 100);
		TNT1 A 0 a_jumpif(waterlevel>2, "Cannot");
		DYNR AAACCCBBB 1 { A_WeaponReady();  }
		Loop;
	DeselectDead:
		BLWS ABC 6;
		BLWS C 8;
		Loop;
	Explode:
		TNT1 A 0 {
			invoker.AltFire = 0;
			A_TakeInventory("TNTAmmo", 1);
			A_TakeInventory("ThrowPower", 100);
			A_ThrowGrenade ("PlayerTNTblow", 8.0, 0, 0);
		}
		TNT1 A 4 a_jumpiF(invoker.health<=0, "DeselectDead");
		BLWS ABC 6;
		Goto Raise;
	Deselect:
		TNT1 A 0 A_JumpIf(!invoker.CheckInventory("TNTAmmo", 1), "DeselectNoammo" );
		TNT1 A 0 a_jumpif(waterlevel>2, "DeselectNoammo");
		DYND AB 1;
		DYND C 1 { A_PlaySound("dsZIPCLS");  }
		DYND DEFGH 1 A_Lower;
		DYND HHHHHHHHHHHHH 1 A_Lower;
		DYND H 1;
		Loop;
	DeselectNoammo:
		ZIPD ABCD 4;
		ZIPD DDDDDDDDDDDD 1 A_Lower(7);
		TNT1 A 0 A_PlaySound("dsZIPCLS");
		TNT1 A 0 A_SelectWeapon ("Sawedoff", SWF_SELECTPRIORITY) ;
		Loop;
	Cannot:
		TNT1 A 0 A_TakeInventory("ThrowPower",255);
		TNT1 A 1 A_SelectWeapon("Pitchfork");
		Goto Deselect;
	Fire:
		DYNL AB 3 A_WeaponReady(14);
		DYNL A 0 A_PlaySound("TNTFUSE", CHAN_WEAPON, 1.0, true );
		DYNL CDEFG 3 A_WeaponReady(14);

		TNT1 A 0 A_Refire;
		TNT1 A 0 { invoker.bNOALERT = false; }
		DYNL G 1 A_WeaponReady(14);
		TNT1 A 0 A_StopSound(CHAN_WEAPON);

		Goto Throw;
	AltFire:
		TNT1 A 0 { invoker.AltFire = 1; }
		goto Fire;
	Hold:
		DYNT ABC 2 { A_WeaponReady(14); A_GiveInventory("ThrowPower", 5); }
		TNT1 A 0 A_jumpif(CountInv("ThrowPower")>=100, "Hold2");
		TNT1 A 0 A_Refire("Hold");
		Goto Throw;
	Hold2:
		DYNO AAAAA 1  { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Throw");
		TNT1 A 0 A_Refire("Hold3");
		Goto Throw;
	Hold3:
		DYNO BBBBBB 1 { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Throw");
		TNT1 A 0 A_Refire("Hold4");
		Goto Throw;
	Hold4:
		DYNO CCCCCC 1 { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Throw");
		TNT1 A 0 A_Refire("Hold5");
		Goto Throw;
	Hold5:
		DYNO DDDDDD 1 { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Throw");
		TNT1 A 0 A_Refire("Hold6");
		Goto Throw;
	Hold6:
		DYNO EEEEEE 1 { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Throw");
		TNT1 A 0 A_Refire("Hold7");
		Goto Throw;
	Hold7:
		DYNO FFFFFF 1 { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Throw");
		TNT1 A 0 A_Refire("Hold8");
		Goto Throw;
	Hold8:
		DYNO GGGGGG 1 { A_WeaponReady(14); }
		//TNT1 A 0 A_jumpif(invoker.Hold>=35*4, "Explode");
		//TNT1 A 0 A_Refire("Explode");
		Goto Explode;
	AltHold:
		TNT1 A 0 { invoker.AltFire = 1; }
		goto Hold;
	Throw:
		DYHN A 2;
		DYHN B 2;
		TNT1 A 0 {

				A_StopSound(CHAN_WEAPON);
				A_GunFlash();
				float xyVel = 30;
				float zVel = 0.5;
				float power = float((CountInv( "ThrowPower" )<=100 ? CountInv( "ThrowPower" ) : 100))/100.0;

				xyVel = xyVel*power-abs(xyVel*power*sin(invoker.pitch));

				if(!invoker.AltFire){
					A_ThrowGrenadePrecize ("PlayerTNTnoWait", 8.0, xyVel, zVel, false);
				} else {
					A_ThrowGrenadePrecize ("PlayerTNT", 8.0, xyVel, zVel, false);
				}

				invoker.AltFire = 0;
				A_TakeInventory("TNTAmmo", 1);
				A_TakeInventory("ThrowPower", 100);
			}

		TNT1 A 0 A_StopSound(CHAN_WEAPON);
		TNT1 A 0 A_PlayWeaponSound("TNTTOSS");

		DYHN CDEFG 1;
		DYHN HI 2;

		TNT1 A 0 A_JumpIfnoammo("Deselect");
		DYHN J 1 { invoker.bNOALERT = true; }
		TNTF PQMNO 3 A_WeaponReady(14);
		goto Ready;

  }
}

class HaveTNT : Undroppable {

	Default	{ Inventory.MaxAmount 2; }

	override void DoEffect(){
		if(Owner.CountInv(self.GetClassName())==1){
			Owner.GiveInventory("HaveTNT", 1);
			Owner.a_playSound("player/TNTpick", CHAN_VOICE );
		}
	}
}

Class PlayerTNT : Actor
{
	bool noWait;
	default{
		//Decal "Scorch";

		radius 6;
		height 4;
		Scale 0.3;
		reactiontime 35*4;
		activesound "TNTFUSE";
		PROJECTILE;
		+RANDOMIZE;
		+NOBOUNCESOUND
		+PUSHABLE;
		-NOGRAVITY;
		-NOTELEPORT;
		+ThruGhost;
		Gravity 0.56;
		+ShootAble;
		Health 1;
		damage 0;
		Species "PlayerThrough";
		+ThruSpecies;
	}
	Override void Tick()
	{
		Super.Tick();
		A_Countdown();
		if(reactiontime<=0){SetStateLabel("Explode");}
		if(waterlevel>0){
			//a_logint(waterlevel);
		}
		A_SpawnItemEX("TNTSmoke",0,0,5, 0,0,1, 0, SXF_NOCHECKPOSITION, 200 );

		//A_SetSpeed(default.speed*power);
	}
	override void PostBeginPlay()
	{


		Super.PostBeginPlay();
		if(!noWait){
			bBOUNCEONFLOORS = 1;
			bBOUNCEONCEILINGS = 1;
			bBOUNCEONWALLS = 1;
			bUSEBOUNCESTATE = 1;
			bBOUNCEAUTOOFF = 1;
			bEXPLODEONWATER = 1;
		}

	}
  states
  {

	Spawn:
		PTNT E 0  A_LoopActiveSound;
		goto see;
	See:
		PTNT ABCDEFGH 1  A_LoopActiveSound();
		Loop;
	Bounce:
		PTNT IJK 1;
		Loop;
	Death:
		TNT1 A 0 A_jumpIf(noWait, "Explode");
		Goto Crash;
	Crash:
		TNT1 A 0 A_jumpIf(noWait, "Explode");
		PTNT IJK 3 A_LoopActiveSound();
		Loop;
	XDeath:
		TNT1 A 0 A_jumpIf(noWait, "Explode");
		Goto Crash;
	Explode:
		TNT1 A 0 A_SpawnItemEx("Explosion",0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		stop;
  }

}
class PlayerTNTnoWait : PlayerTNT
{
	override void PostBeginPlay()
	{
		noWait = 1;
		Super.PostBeginPlay();

	}
}
class PlayerTNTblow : PlayerTNT
{
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		setStateLabel("Explode");
	}
}

Class TNTSmoke : BulletPuff
{
	default{
	  renderstyle "Translucent";
	  alpha 0.5;
	  +NOBLOCKMAP;
	  +DONTSPLASH;
	  PROJECTILE;
	  +WINDTHRUST;
	  +ALLOWPARTICLES;
	}


  states
  {
  Spawn:
    PUFF A 0 A_Jump(128,32);
    PUFF AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHH 1 A_FadeOut(0.01);
    stop;
    PUFF IIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPP 1 A_FadeOut(0.01);
    stop;
  }
}