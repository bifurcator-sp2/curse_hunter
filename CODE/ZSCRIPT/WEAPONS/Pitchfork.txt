
Class Pitchfork : CHWeapon
{
	Default
	{
	  obituary "%o was poked by %k";
	  weapon.selectionorder 2000;
	  weapon.kickback 800;

	  +WEAPON.MELEEWEAPON;
	  +WEAPON.NOALERT;
	  +WEAPON.NOAUTOAIM;
		+ThruGhost;
		AttackSound "PitchFork/Attack";

	}

	virtual void CastShield(){
		if(Owner.checkInventory("Ability_Shield", 1) && !Owner.checkInventory("PlayerShieldSpawned", 1)){
			Ability_Shield AS = Ability_Shield(Owner.findInventory("Ability_Shield"));
			if(AS.check(self)){
				Owner.A_SpawnItemEx("BloodShield",0, 0, 0, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
				Owner.giveInventory("SurvivalEffect", 1);
			}
		}
	}


  states
  {
	  Ready:
		PITC A 1 A_WeaponReady;
		Loop;
	  Deselect:
		PITC A 1 { A_Lower(); takeInventory("PlayerShieldSpawned", 1);}
		Loop;
	  Select:
		TNT1 A 0 {Invoker.HandlingControl();}
		PITC A 1 A_Raise;
		Loop;
	  Fire:
		TNT1 A 0  A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		PITC A 1 A_SetPitch(Pitch+1.0, SPF_INTERPOLATE);
		PITC B 1 A_SetPitch(Pitch+1.0, SPF_INTERPOLATE);
		TNT1 A 0 {
			if(!checkInventory("PlayerShieldSpawned", 1)){
				A_FireBullets(-4, 0, -1, 3,"PitchforkPuff", FBF_EXPLICITANGLE|FBF_NORANDOM,60,"",64.0);
				A_FireBullets(4, 0, -1, 3,"PitchforkPuff",  FBF_EXPLICITANGLE|FBF_NORANDOM,60,"",64.0);
				A_FireBullets(10, 0, -1, 3,"PitchforkPuff", FBF_EXPLICITANGLE|FBF_NORANDOM,60,"",64.0);
				A_FireBullets(12, 0, 4, 3, "PitchforkPuff", FBF_EXPLICITANGLE|FBF_NORANDOM,60,"",64.0);
			} else {

				A_FireBullets(-4, 0, -1, 12,"PitchforkRipperPuff", FBF_EXPLICITANGLE|FBF_NORANDOM,96,"",64.0);
				A_FireBullets(4, 0, -1, 12,"PitchforkRipperPuff",  FBF_EXPLICITANGLE|FBF_NORANDOM,96,"",64.0);
				A_FireBullets(10, 0, -1, 12,"PitchforkRipperPuff", FBF_EXPLICITANGLE|FBF_NORANDOM,96,"",64.0);
				A_FireBullets(12, 0, 4, 12, "PitchforkRipperPuff", FBF_EXPLICITANGLE|FBF_NORANDOM,96,"",64.0);

			}
		}
		PITC CDDE 2 A_SetPitch(Pitch-0.5, SPF_INTERPOLATE);
		PITC FGAA 2;
		TNT1 A 0 A_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH);
		TNT1 A 0 A_ReFire;
		PITC A 10;

		goto Ready;
	  Altfire:
		TNT1 A 0 { invoker.CastShield(); }
		Goto Ready;

  }
}



class BloodShield : Actor
{
//
	Default
	{
		health 300;
		painchance 255;
		+SHOOTABLE;
		+NOGRAVITY;
		+NEVERTARGET;
		+FRIENDLY;
		BloodType "RedBlood";
		//+NOBLOODDECALS;
		+WALLSPRITE;
		+NOGRAVITY;
		RENDERSTYLE "Translucent";
		SPECIES "CalebBloodShield";
		PainSound "player/shieldPain";
		seeSound "player/shieldOn";
		deathsound "player/shieldDie";

		+NOCLIP;
		alpha 0.3;
		//+NOBLOCKMAP;
		-solid;
		Yscale 0.5;
		Xscale 0.5;

	}
	Override void PostBeginPlay()
	{
		alpha = 0.0;
		if(Master){
			Master.giveInventory("PlayerShieldSpawned", 1);
			A_SetSize(master.radius-2, master.height);
			self.giveInventory("Unhandable", 1);
		} else {
			a_playSound("player/shieldOff");
			self.destroy();
		}
		super.PostBeginPlay();
		a_playSound("player/shieldOn");

	}

	virtual float CalcAlpha(){
		float PercHealth = float(health)/float(default.health);
		//a_logFloat(PercHealth);
		return default.alpha*PercHealth;
	}


	virtual void Behaviour(){
		if(Master && Master.checkInventory("Ability_Shield", 1) && Master.health>0  && Master.checkInventory("PlayerShieldSpawned", 1)){
				vector3 OldItemPos = self.pos;
				vector3 followerPos;

				followerPos = Master.Vec3Angle(
					Master.Radius,
					Master.angle,
					8,
					true);
				angle = Master.angle;
				//followerPos.z = Master.pos.z+8;
				self.vel.x =  followerPos.x-OldItemPos.x+Master.vel.x;
				self.vel.y =  followerPos.y-OldItemPos.y+Master.vel.y;
				self.vel.z =  followerPos.z-OldItemPos.z+Master.vel.z;
				//self.SetZ(Master.pos.z);
				if(distance3D(Master)>64){
					SetOrigin(followerPos, true);
				}
				a_fadeTo(CalcAlpha(), 0.05, FTF_CLAMP);
			//
		} else {
			//a_playSound("player/shieldOff");
			a_playSound("player/shieldDie");
			if(Master){	Master.takeInventory("PlayerShieldSpawned", 1); }
			self.destroy();
		}
	}
	states
	{
		Spawn:
			BSLD A 1 a_fadeTo(default.alpha, 0.02, FTF_CLAMP);
			BSLD A 0 a_jumpif(alpha>=default.alpha, "Shield");
			LOOP;
		Shield:
			BSLD A 1 Behaviour();
			Loop;
		Pain:
			BSLD AAAAAAAAAAAAAAAAAA 1 { Behaviour(); a_fadeOut(0.1, FTF_CLAMP); }
			BSLD A 1 { A_playSound("player/shieldPain", CHAN_BODY); Behaviour(); }
			Goto Shield;
		Death:
			TNT1 A 1 {
				a_scream();
				Master.A_playSound("player/shieldDie", CHAN_BODY);
				A_SpawnItemEx("BloodCloud", 0, 0, 24, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
				for(int i = 0; i<5; i++){
					A_SpawnItemEx("BloodTrail", 0, 0, 24, frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);
				}
				if(Master){	Master.takeInventory("PlayerShieldSpawned", 1); }
			}
			Stop;

	}

}

class PlayerShieldSpawned : Undroppable {}