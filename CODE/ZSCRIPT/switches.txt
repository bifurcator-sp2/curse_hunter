class SwitchBase : PointUsable
{
	bool Pressed;

	default
	{
		+NOBLOOD;
		+SHOOTABLE;
		-SOLID;
		+DONTTHRUST;
		+WALLSPRITE;
		+NOGRAVITY;
		//+GHOST;

		scale  0.5;
		radius 8;
		height 16;
		tag "$SWITCH_STD_NAME";
	}
	override void Doit(actor Caller){
		if(score && Pressed){ return; }
		Pressed = 1;
		setStateLabel("Pressed");
	}
	States
	{
		spawn:
			TNT1 A -1;
			Stop;
		Pressed:
			TNT1 A 1 A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
			"####" "#" 10 ;
			Stop;
	}
}

class z_ButtonSwitch : SwitchBase
{
	States
	{
		spawn:
			SWT4 A -1;
			Stop;
		Pressed:
			SWT4 B 1 a_playSound("world/MediumSwitch", CHAN_ITEM, 1.0 , false, ATTN_NORM);
			SWT4 B 15;
			SWT4 B 1 A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
			"####" "#" 10;
			Goto Spawn;
	}

}
class z_ButtonSwitch2 : SwitchBase
{
	States
	{
		spawn:
			SWT5 A -1;
			Stop;
		Pressed:
			SWT5 B 1 a_playSound("world/MediumSwitch", CHAN_ITEM, 1.0 , false, ATTN_NORM);
			SWT5 B 15;
			SWT5 B 1 A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
			"####" "#" 10;
			Goto Spawn;
	}

}
class z_EnLevelSwitch : SwitchBase
{
	default {
		tag "$SWITCH_ENDLEVEL_NAME";
	}
	States
	{
		spawn:
			S666 A -1;
			Stop;
		Pressed:
			S666 B 1 a_playSound("world/MediumSwitch", CHAN_ITEM, 1.0 , false, ATTN_NORM);
			S666 B 15;
			S666 B 1 A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
			"####" "#" 10;
			Goto Spawn;
	}

}

class z_ProximitySwitchOnce : actor
{
	default
	{
		+NOINTERACTION;
		+NOGRAVITY;
	}
	States
	{
		Spawn:
			TNT1 A 5 {
				if(self.distance3D(players[consoleplayer].mo)<angle){
					A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
					self.destroy();
				}
			}
			Loop;

	}

}


class z_chainSwitchLock : actor
{
	default
	{
		health 50;
		+SOLID;
		+SHOOTABLE;
		+NEVERTARGET;
		-PUSHABLE;
		+DONTTHRUST;
		+NOBLOOD;
		+NOBLOODDECALS;
		+NOGRAVITY;
		+WALLSPRITE;
		painchance 100;
		DamageFactor "normal", 1.0;

		DamageFactor "PitchFork", 0.0;
		DamageFactor "Fire", 0.0;
		height 16;
		radius 8;
		TAG "$CHAINLOCK";
	}
	States
	{
		Spawn:
			LOCK A 1 {
				self.giveInventory("Unhandable", 1);
				self.giveInventory("Pointable", 1);

			}
			Loop;
		Pain:
			LOCK A 1 A_SpawnitemEX("Bulletspark", 4, 0, 0);
			goto Spawn;
		Death:
			TNT1 A 0 { A_NoBlocking(); bNOGRAVITY = 1; a_playSound("debris/metall");}
			LOCK ABCDEFG 5;
			TNT1 A 0 A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
			LOCK G -1;
			stop;
	}
}


Class z_QuestItem : z_randomStone
{
	vector3 PreviousPos;
	bool CheckForLost;
	vector3 startPos;

	default
	{
		+DONTTHRUST;

	}
	override void PostBeginPlay(){
		super.PostBeginPlay();
		self.takeInventory("Unhandable", 1);
		self.takeInventory("Usable", 1);
		startPos = pos;
	}

	override Void Tick(){
		super.Tick();
		if(checkInventory("itemInHands", 1)){
			CheckForLost = 0;
		} else {
			if(CheckForLost){
				if(distance3D(players[consoleplayer].mo)>512){
					setOrigin(startPos, 0);
					a_stop();
					CheckForLost = 0;
				}
			}
		}
	}

	States
	{
		CantCross:
			"####" "#" 0 {
				CheckForLost = 1;
			}
			Goto Draw;
	}
}

Class z_Ereshkigal_statue : z_QuestItem
{
	default
	{
		radius  8;
		height 22;
		scale 0.20;
		+FORCEYBILLBOARD;
		TAG "$ERESHKIGAL";
	}
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		A_SetScale(0.18);
	}
	States
	{
		SetSprite:
			TNT1 A 0 Nodelay { SetZ(floorZ);}
			ITM1 A 0 A_jump(256, "Draw");
	}

}

class z_takerSwitch : actor
{
	string ClassName;
	actor Item;
	bool ItemPuted;
	bool ItemInRadius;
	int specialDelay;
	default
	{
		+NOINTERACTION;
		+NOGRAVITY;
		+DONTTHRUST;
	}
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		specialDelay = -1;
		ClassName = StringTable.Localize(String.Format("%s%i", "$PUZZLEITEM", Score));

	}
	override void Tick(){
			BlockThingsIterator it = BlockThingsIterator.Create(self, 8);
			while (it.Next())
			{
				if (!(it.thing is ClassName)) { continue; }

				if(distance3D(it.thing)<24){
					if(!ItemPuted){

						Item = it.thing;
						Item.a_stop();
						Item.setOrigin(pos, 1);
						Item.bINVULNERABLE = 1;
						Item.bINVULNERABLE = 1;
						Item.bDONTTHRUST = 1;
						Item.bWINDTHRUST = 0;
						Item.bPUSHABLE = 0;

						ItemPuted = true;
						if(Item.FindState("LookCeiling")){
							Item.setStateLabel("Drop");
						} else {
							Item.takeInventory("itemInHands", 1);
							Item.giveInventory("Unhandable", 1);
							z_PointController Controller = z_PointController(players[consoleplayer].mo.FindInventory("z_PointController"));
							Controller.USE = 1;
							Controller.HoldedItem = null;
							Item.bNOGRAVITY = 0;
						}


						/**/

						a_playSound("items/PuzzleON", CHAN_ITEM, 1.0 , false, ATTN_NORM);
						specialDelay = 35;
					}
					ItemInRadius = true;
				} else {ItemInRadius = false;}

			}
			if(!ItemInRadius){
				ItemPuted = false;
				Item = null;
			}
			if(specialDelay>0){
				specialDelay--;
			} else {
				if(specialDelay!=-1){
					if(special){
						A_CallSpecial(special, args[0], args[1], args[2], args[3], args[4]);
					}
					specialDelay = -1;
				}
			}
	}

	States
	{
		Spawn:
			TNT1 A -1;
			Loop;
	}
}