class z_CultistShotgunInactive : z_CultistShotgun
{
	states
	{
	SetSprite:
		YCUL A 1;
		goto Inactive;
	}
}
class z_CultistShotgun  : CHmonster
{

	int StandHeight;
	int CrawlHeight;
	int StandSpeed;
	int CrawlSpeed;
	int BurnDeathCounter;
	int fx_fireplace_offset;
	float fx_fireplace_scale;
	int Shells;

	bool Scout;
	bool Crawl;
	int cntr;
	bool swim;
	int FireAccuracyXY;
	int FireAccuracyZ;
	int AltFireAccuracyXY;
	int AltFireAccuracyZ;

	default{

	  obituary "$CULTIST_SHOTGUN_OBITUARY";
	  health 120;

	  radius 20;
	  height 56;
	  mass 200;
	  speed 5;
	  floatspeed 12;

	  DamageFactor "fire", 1.0;
	  DamageFactor "Blast", 1.7;
	  DamageFactor "KineticPlayerDamage", 1.5;


	  PainChance "KineticPlayerDamage", 256;
	  painchance 128;

	  BloodType "RedBlood";
	  seesound "CultistSee";
	  painsound "CultistPain";
	  deathsound "CultistDie";
	  //activesound "CultistAct";

	  //Dropitem "Sawedoff", 128;
	  //Dropitem "Bshells", 128;
	  //translation "112:120=[154,169,154]:[132,153,132]","120:127=[90,109,88]:[2,4,2]","209:223=[192,160,128]:[128,80,64]";
	  //translation "112:127=70:79";
	  Scale 0.53;
	  Species "Cultist";
	  +NOINFIGHTING;
	  MONSTER;
	 // +ALWAYSFAST;
	  +MISSILEEVENMORE;
	  +NODROPOFF;
	  +FLOORCLIP;
	  +NOSPLASHALERT;
	  +FLOAT;
	  -NOGRAVITY;
	}

	override void SetNames(){
		N_NAME = StringTable.Localize("$CULTIST_SHOTGUN_NAME");
		N_DEATHNAME = StringTable.Localize("$CULTIST_SHOTGUN_DEATHNAME");
		N_BURNDEATHNAME = StringTable.Localize("$CULTIST_SHOTGUN_BURNDEATHNAME");
		N_GIBDEATHNAME = StringTable.Localize("$CULTIST_SHOTGUN_GIBDEATHNAME");
		N_HEADSHOTED = StringTable.Localize("$CULTIST_SHOTGUN_HEADSHOTED");

	}

	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		SetNames();
		self.giveInventory("HeadShotController", 1);
		self.giveInventory("QuickKillReady", 1);
		self.giveInventory("SubordinatedReady", 1);
		self.giveInventory("MonsterShellXDeathController", 1);
		self.giveInventory("CultistTalk", 1);


		self.setTag(N_NAME);

		RenderDistance = Cvar.FindCvar("monsters_render_radius").GetInt() ;
		fx_fireplace_offset = 8;
		fx_fireplace_scale = 0.2;
		Shells = 2;//in weapon

		if(getClassName()=="CultistShotgun"){
			if(!random(0, 3)){
				Scout = 1;
				A_setHealth(health*1.5);
				A_SetTranslation("GrayZombie");
			}
		}

		StandHeight = 56;
		CrawlHeight = 18;
		StandSpeed = 5;
		CrawlSpeed = 3;
		putOutFireChance = 50;

		FireAccuracyXY = 8;
		FireAccuracyZ = 4;
		AltFireAccuracyXY = 16;
		AltFireAccuracyZ = 8;

	}

	override void Tick(){
		super.tick();

		/*if(Args[0]&1==1 ){
			deactivate(self);
			Args[0]-=1;
		}*/

		if(health<=0){
			self.takeInventory("HeadShotController", 1);
		}
		if(waterlevel>1){
			self.takeInventory("Burner", 1);
		}
		if(Crawl){self.takeInventory("HeadShotController", 1);}

		if(!bDORMANT && !InStateSequence(CurState,ResolveState("Spawn")) && !InStateSequence(CurState,ResolveState("Idle")) && !InStateSequence(CurState,ResolveState("Corpse"))){
			cntr++;
			if(cntr==10){
				if(waterlevel>1){
					bFLOAT = 1; bNOGRAVITY = 1;
					if(!swim){ swim = 1; a_stop();}
					if(health>0){ThrustThingZ(0,0.5,0,0);}
				} else {
					bFLOAT = 0; bNOGRAVITY = 0;

					swim = 0;
				}
				cntr = 0;
			}
		}

	}



	virtual void spawnLoot(){
		if(!random(0,1)){
			A_SpawnItemEx ("Sawedoff", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		}
		if(!random(0,2)){
			A_SpawnItemEx ("z_Bshells", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		}
		if(!random(0,3)){
			A_SpawnItemEx ("LifeEssence", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		}
	}



  states
  {
	SetSprite:
		YCUL A 1;  //for DistanceSpawned
	Active:
	Spawn:
		YCUL A 0 nodelay A_JumpIf(waterlevel>1, 2);
		TNT1 A 0 a_jumpif(bDORMANT, "Inactive");
		YCUL A 10 A_Look();
		Goto Spawn;
		YCLS ABCD 4 A_Look();
		Goto Spawn;

	Idle:
		"####" AAABBBCCCDDDEEEFFF 2 A_Wander;
		"####" A 0 {
			if(random(1, 5)==5){
				A_PlaySound("CultistGotYou",0);
			}
			A_Recoil(-1);
			A_Look();
		}
	  Loop;
	Inactive:
		YCUL A 10;
		Loop;
	See:
		YCUL A 0 {
				//a_logfloat(pitch);
				pitch = 0;
				A_setSize(radius, StandHeight);

				if(waterlevel<1){
					self.giveInventory("HeadShotController", 1);
				}
				else
				{
					self.takeInventory("HeadShotController", 1);
				}
				if(Scout){
					giveInventory("SeekPlayerController", 1);
				}
			}
		"####" A 0 A_JumpIf(waterlevel>1,"SeeFloat");
		"####" AAAABBBBCCCCDDDD 1  { A_Chase();}
		"####" A 0 A_Jump(40,"Moronic");
		loop;
	SeeStrafe:
		"####" A 0 {
				pitch = 0;
				if(waterlevel<1){
					self.giveInventory("HeadShotController", 1);
				}
				else
				{
					self.takeInventory("HeadShotController", 1);
				}
			}
		"####" A 0 A_JumpIf(waterlevel>1,"SeeFloat");
		"####" ABCD 4  A_Chase("Missile", "Missile", CHF_FASTCHASE);
		"####" A 0 A_Jump(64,"See");
		loop;

	SeeFloat:
		"####" A 0 {
				pitch = 0;
				if(waterlevel<1){
					self.giveInventory("HeadShotController", 1);
				}
				else
				{
					self.takeInventory("HeadShotController", 1);
				}
			}
		YCLS ABCD 4 A_Chase;
		Goto See;

	Crawl:
		TNT1 A 0 {
			pitch = 0;
			Crawl = 1;
			A_SetSpeed(CrawlSpeed);
			A_setSize(radius, CrawlHeight);
			if(CurrentDistance<256 || !random(0, 128)){
				Crawl = 0;
				A_SetSpeed(StandSpeed);
				A_setSize(radius, StandHeight);
				setStateLabel("See");
			}
		}
		CULC ABCDE 4  A_Chase("CrawlFire", "CrawlFire");
		loop;

	CrawlFire:
		CULC A 0 a_jumpif(Shells<=0, "RCrawlefire");
		CULC A 8 {  A_FaceTarget(); }
		CULC F 4 {
			a_spawnItemEx("GunFireLight", 0, 0, 8, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_SpawnProjectile("ShotGunSmoke", 8);
			for(int i = 0; i<6; i++){
				A_SpawnProjectile ("ShellTracer", 8, 0.0, frandom(-FireAccuracyXY, FireAccuracyXY), CMF_OFFSETPITCH, frandom(-FireAccuracyZ, FireAccuracyZ)) ;
			}
			Shells--;
			A_PlaySound("CultistShotgun", CHAN_Body);
			A_AlertMonsters();
			Spawn("Alerter", self.pos);

		}
		CULC A 0 a_jumpif(Shells<=0, "CrawlRefire");
		CULC A 0 a_jumpif(waterlevel>1, "SeeFloat");
		Goto Crawl;

	CrawlRefire:
		CULC A 0 {
				A_PlaySound("weapons/sawedofreload1");
				A_SpawnProjectile("ShotgunCasing",8,4,24,1);
				A_SpawnProjectile("ShotgunCasing",8,4,24,1);
			}
		CULC ABCDABCDABCD 4;// { A_Wander();}
		CULC A 0 {Shells = 2; A_PlaySound("weapons/sawedoffload");}
		CULC ABCD 4;// { A_Chase(); }
		Goto Crawl;

	CrawlPain:
		CULC A 3;
		CULC A 3 {A_Pain();}
		goto Crawl;


	Moronic :
		"####" ABCD 4 { A_Wander(); A_Look(); }
		"####" F 0 A_Jump(120,"Forgot");
		Loop;
	Forgot:
		"####" A 0 A_ClearTarget;
		Goto Spawn;

	Missile:

		YCUL A 0 a_jumpif(waterlevel>1, "CrawlFire");
		YCUL A 0 a_jumpif(!random(0, 5), "Throw_TNT");
		YCUL A 0 a_jumpif(Shells<=0, "Refire");
		YCUF A 0 a_jumpif((random(0, 1)==1 && Shells==2), "DoubleShot");
		YCUF A 0 {pitch = 0;}
		YCUF A 8 A_FaceTarget;
		YCUF B 4 bright {
			//a_log(target.getClassName());
			//a_logfloat(pitch);
			//A_CustomBulletAttack(5.0, 5.0, 8, 2,"B_BulletPuff");
			for(int i = 0; i<6; i++){
				A_SpawnProjectile ("ShellTracer", 32, 0.0, frandom(-FireAccuracyXY, FireAccuracyXY), CMF_OFFSETPITCH, frandom(-FireAccuracyZ, FireAccuracyZ)) ;
			}

			A_SpawnProjectile("ShotGunSmoke", 32);
			a_spawnItemEx("GunFireLight", 0, 0, 32, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			Shells--;
			A_PlaySound("CultistShotgun", CHAN_Body);
			A_AlertMonsters();
			Spawn("Alerter", self.pos);

		}
		YCUL A 0 a_jumpif(Shells<=0, "Refire");
		YCUL A 1;
		Goto See;

	Throw_TNT:
		YCUL A 0 {
			if(waterlevel>1){ setStateLabel("SeeFloat"); }
			if(CurrentDistance<256 || CurrentDistance>1024){
				setStateLabel("Missile");
			}
		}
		YCUL X 4 A_FaceTarget;
		YCUL YZ 3 ;
		YCUL "[" 4;
		YCUL "[" 1 A_JumpIf(waterlevel>1,"SeeFloat");
		YCUL A 0 A_ThrowGrenade("OneTNT",0,20,4,0);
		YCUL "^" 5;
		YCUB A 5;
		YCUL A 0;
		Goto See;

	DoubleShot:
		YCUF A 16 A_FaceTarget; //A lot slower...
		YCUF B 4 bright {
			//a_logINT(health);
			for(int i = 0; i<12; i++){
				A_SpawnProjectile ("ShellTracer", 32, 0.0, frandom(-AltFireAccuracyXY, AltFireAccuracyXY), CMF_OFFSETPITCH, frandom(-AltFireAccuracyZ, AltFireAccuracyZ)) ;
			}
			A_SpawnProjectile("ShotGunSmoke", 32);
			A_SpawnProjectile("ShotGunSmoke", 32);
			a_spawnItemEx("GunFireLight", 0, 0, 32, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			a_spawnItemEx("GunFireLight", 0, 0, 32, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			Shells =0;
			A_PlaySound("SAWNALT", CHAN_WEAPON);
			A_AlertMonsters();
			Spawn("Alerter", self.pos);

		}
		YCUL A 1 a_jump(255, "Refire");
	Refire:
		//52 ticks for reload as Caleb
		"####" A 0 {
				A_PlaySound("weapons/sawedofreload1");
				A_SpawnProjectile("ShotgunCasing",30,4,24,1);
				A_SpawnProjectile("ShotgunCasing",30,4,24,1);
			}
		CRLL ABCDEFG 4;
		"####" A 0 {Shells = 2; A_PlaySound("weapons/sawedoffload");}
		CRLL HI 4;
		YCUL ABCD 4;// { A_Chase(); }

		Goto See;

	Pain:
		TNT1 A 0 A_jumpif(Crawl, "CrawlPain");
		TNT1 A 0 A_Pain();
		YCUL G 3;
		"####" G 3;
		"####" G 0 A_jumpif( ( CurrentDistance>256 && !random(0, 1) ), "CrawlPain");
		goto SeeStrafe;

	Pain.Fire:
		YCUL G 3;
		"####" G 3 {
			A_Pain();
			if(LastDamage>5){
				self.giveInventory("Burner", 1);
				if(Crawl){
					Crawl = 0;
					A_SetSpeed(StandSpeed);
					A_setSize(radius, StandHeight);
				}
			}
		}
		goto See;
	Pain.Shock:
		"####" A 0 {
			A_PlaySound("CultistPain");
			A_Stop();
			A_ClearTarget(); // Go dumb
		}
		BCUZ A 7;
		BCUZ A 7 Bright;
		BCUZ A 7;
		BCUZ A 7 Bright;
		BCUZ A 7;
		BCUZ A 7 Bright;
		BCUZ A 7;
		BCUZ A 7 Bright;
		Goto See;

	Death:
		TNT1 A 0 a_jumpif(Crawl, 5);
		YCUL H 2 {
			//recoil_sawedOff(70);
			//recoil_tommy(30);
			//a_logint(health);
			A_jumpif((health<-5 && CurrentDistance<128 ), "XDeath.Bullet");
		}
		YCUL H 5 A_Scream;
		YCUL I 5;
		YCUL J 5;
		YCUL KLMN 5;
		"####" A 0 {
				a_playSound("human/BodyFall");
				self.setTag(N_DEATHNAME);
				actor BC = self.spawn("BodyBlowTarget", self.pos);BC.Master = self;//this is works
				spawnLoot();
			}
		"####" NONON 10;
		"####" N 1;
		Goto Corpse;

	Death.Fire:
		FGUY A 0 A_setSize(radius, StandHeight);
		FGUY ABCDEF 3 bright light("FirePlace") {
				A_playsound("CultistBurns", CHAN_BODY, 1.0, true);
				A_Wander();
				BurnDeathCounter++;
			}
		"####" A 0 a_jumpIf(BurnDeathCounter>50, 2);
		Goto Death.Fire;

		FGUY GHIJKLMN 8 bright light("FirePlace");
		"####" A 0  { a_playSound("human/BodyFall"); a_stopSound(CHAN_BODY); burned = 1; A_setSize(16, 8); BDSM();}
		FGUY OPQRS 8 bright;
		FGUT T 0 setTag(N_BURNDEATHNAME);
		Goto Corpse;

	Death.Headshot:
			"####" A 0  a_stopSound(CHAN_BODY);
			GCUX T 10 a_playSound("gore/BloodSplash", CHAN_BODY);
			GCUX T 25 {
					A_SpawnItemEx("CultistHeadFLy",0, 0, height, frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(8.0, 16.0), 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
					for(int i = 0; i<random(5, 7); i++){
						A_SpawnItemEx("BloodTrail", random(-2, 2), random(-2, 2), random(-2, 2), frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION);
					}
				}

			GCUX IJ 8;
			GCUX KL 8 a_playSound("human/BodyFall");
			TNT1 A 0 {
				self.setTag(N_HEADSHOTED);
				actor BC = self.spawn("BodyBlowTarget", self.pos);BC.Master = self;
				spawnLoot();
			}
			YCUL MN 5;
			YCUL NONON 10;
			"####" "#" 0 A_SpawnItemEx("HeartHealth",0, 0, 0, 0, 0, 0, 0,SXF_NOCHECKPOSITION, 128 );
			Goto Corpse;
	XDeath:
		YCUL P 1 GiveInventory("GibDeathMark", 1);
		YCUL P 4 A_XScream;
		"####" P 0 {a_UnsetSolid(); self.GiveInventory("HumanXDeathGibs", 1); self.setTag(N_GIBDEATHNAME); }
		"####" QRSTUV 5;
		"####" V 1;
		Goto Corpse;

	Xdeath.Shells:

		GCUX U 1 { bNOPAIN = 1; GiveInventory("GibDeathMark", 1);}
		GCUX U 8;
		"####" "#" 0 {
				a_playSound("gore/BloodSplash");
				self.GiveInventory("HumanXDeathGibs", 1); self.setTag(N_GIBDEATHNAME);
				/*for(int i = 0; i<random(3, 5); i++){
					A_SpawnItemEx("BloodTrail", random(-2, 2), random(-2, 2), random(24, 32), frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);
				}*/
			}
		"####" "#" 0 {a_UnsetSolid();  self.setTag(N_GIBDEATHNAME); }
		"####" VW 8;
		"####" "#" 0 a_playSound("human/BodyFall");
		"####" YZ 5;
		Goto Corpse;
	Corpse:
		"####" "#" 1 {
			self.takeInventory("QuickKillReady", 1);
			self.takeInventory("SubordinatedReady", 1);
			A_setSize(16, 16);
			bSHOOTABLE = 1;
			bTHRUACTORS = 1;
			//bSOLID = 1;
			bGHOST = 1;
			if(!burned){
				self.giveInventory("Bleeder", 1);
			}
		}
		"####" "#" -1;
		Stop;
	Raise:
		YCUL NMLKJIH 4;
		Goto See;
  }
}


class z_CultistTommyInactive : z_CultistTommy
{
	states
	{
	SetSprite:
		BCUL A 1;
		goto Inactive;
	}
}
class z_CultistTommy  : z_CultistShotgun
{
	bool SeeTarget;


	default{
	  obituary "$CULTIST_TOMMY_OBITUARY";
	  translation "112:120=[128,128,128]:[48,48,48]","120:127=[48,48,48]:[8,8,8]","209:223=193:207","192:200=[192,192,192]:[64,64,64]","200:207=[64,64,64]:[16,16,16]","240:247=[16,16,16]:[0,0,0]";
	}

	override void SetNames(){
		N_NAME = StringTable.Localize("$CULTIST_TOMMY_NAME");
		N_DEATHNAME = StringTable.Localize("$CULTIST_TOMMY_DEATHNAME");
		N_BURNDEATHNAME = StringTable.Localize("$CULTIST_TOMMY_BURNDEATHNAME");
		N_GIBDEATHNAME = StringTable.Localize("$CULTIST_TOMMY_GIBDEATHNAME");
		N_HEADSHOTED = StringTable.Localize("$CULTIST_TOMMY_HEADSHOTED");

	}

	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Shells = 50;//in weapon
	}
	override void spawnLoot(){

		if(!random(0,1)){
			A_SpawnItemEx ("TommyGun", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		}
		if(!random(0,3)){
			A_SpawnItemEx ("bullets_drum", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		} else {
			A_SpawnItemEx ("bullets", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		}
		if(!random(0,3)){
			A_SpawnItemEx ("LifeEssence", 0, 0, 0, frandom(-2.0, 2.0), frandom(-2.0, 2.0), frandom(4.0, 8.0), 0,SXF_NOCHECKPOSITION);
		}

	}


  states
  {
	SetSprite:
		BCUL A 1;//for DistanceSpawned
	Active:
	Spawn:
		TNT1 A 0 a_jumpif(bDORMANT, "Inactive");
	   BCUL A 10 A_Look();
	   Goto Spawn;

	Idle:
		"####" AAABBBCCCDDDEEEFFF 2 A_Wander;
		"####" A 0 {
			if(random(1, 5)==5){
				A_PlaySound("CultistGotYou",0);
			}
			A_Recoil(-1);
			A_Look();
		}
	  Loop;
	Inactive:
		BCUL A 10;
		Loop;
	See:
		BCUL A 0 {
				//a_logfloat(pitch);
				pitch = 0;
				bFLOAT = 0; bNOGRAVITY = 0;
				self.giveInventory("HeadShotController", 1);

				if(Scout){
					giveInventory("SeekPlayerController", 1);
				}
			}

		"####" AAAABBBBCCCCDDDD 1  { A_Chase();}
		"####" A 0 A_Jump(40,"Moronic");
		loop;
	SeeStrafe:
		"####" A 0 {
				pitch = 0;
				bFLOAT = 0; bNOGRAVITY = 0;
				self.giveInventory("HeadShotController", 1);

			}
		"####" ABCD 4  A_Chase("Missile", "Missile", CHF_FASTCHASE);
		"####" A 0 A_Jump(64,"See");
		loop;


	Moronic :
		"####" ABCD 4 { A_Wander(); A_Look(); }
		"####" F 0 A_Jump(120,"Forgot");
		Loop;
	Forgot:
		"####" A 0 A_ClearTarget;
		Goto Spawn;

	Missile:
		BCUL A 0 a_jumpif(!random(0, 5), "Throw_TNT");
		BCUL A 0 a_jumpif(Shells<=0, "Refire");
		BCUL A 0 {pitch = 0;}
		BCUL B 8 A_FaceTarget;
	TommyFire:
		BCUL E 2;
		BCUL F 1 bright {
			//A_CustomBulletAttack(3.0, 1.0, 1, 2,"B_BulletPuff");

			A_SpawnProjectile ("BulletrTracer", 32, 0.0, frandom(-5, 5), CMF_OFFSETPITCH, frandom(-3, 3)) ;
			//A_SpawnProjectile("ShotGunSmoke", 32);
			a_spawnItemEx("GunFireLight", 0, 0, 32, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			Shells--;
			A_PlaySound("Cultist/Tommy", CHAN_Body);
			A_AlertMonsters(512);
			Spawn("Alerter", self.pos);

			if(checkSight(target)){
				SeeTarget = 1;
				A_FaceTarget();
			}

		}
		BCUL A 0 a_jumpif(Shells<=0, "Refire");
		BCUL A 0 a_jump(4, "See");
		BCUL A 0 a_jump(( !SeeTarget && !random(0, 10) ), "See");
		Loop;

	Throw_TNT:
		BCUL A 0 {
			if(CurrentDistance<256 || CurrentDistance>1024){
				setStateLabel("TommyFire");
			}
		}
		BCUL X 4 A_FaceTarget;
		BCUL YZ 3 ;
		BCUL "[" 5;
		BCUL "]" 0 A_ThrowGrenade("OneTNT",0,20,4,0);
		BCUL "[" 5;
		BCUL ZY 5 ;
		Goto See;


	Refire:
		//52 ticks for reload as Caleb
		BCUL A 0 {
				A_PlaySound("tommyGun/drumOut");
				A_SpawnProjectile("TommygunDrum",30,4);
			}
		CRLD ABCDEFG 4;
		BCUL A 0 {Shells = 50; A_PlaySound("tommyGun/drumIn");}
		CRLD HI 4;
		BCUL ABCD 4  A_Wander();

		Goto See;

	Pain:
		BCUL G 3;
		"####" G 3 {A_Pain();}
		goto SeeStrafe;

	Pain.Fire:
		BCUL G 3;
		"####" G 3 {
			A_Pain();
			if(LastDamage>5){
				self.giveInventory("Burner", 1);
				if(Crawl){
					Crawl = 0;
					A_SetSpeed(StandSpeed);
					A_setSize(radius, StandHeight);
				}
			}
		}
		goto See;
	Pain.Shock:
		"####" A 0 {
			A_PlaySound("CultistPain");
			A_Stop();
			A_ClearTarget(); // Go dumb
		}
		BCUZ A 7;
		BCUZ A 7 Bright;
		BCUZ A 7;
		BCUZ A 7 Bright;
		BCUZ A 7;
		BCUZ A 7 Bright;
		BCUZ A 7;
		BCUZ A 7 Bright;
		Goto See;

	Death:
		BCUL H 2 {
			//recoil_sawedOff(70);
			//recoil_tommy(30);
			//a_logint(health);
			A_jumpif((health<-5 && CurrentDistance<128 ), "XDeath.Bullet");
		}
		BCUL H 5 A_Scream;
		BCUL I 5;
		BCUL J 5;
		BCUL KLMN 5;
		"####" A 0 {
				a_playSound("human/BodyFall");
				self.setTag(N_DEATHNAME);
				actor BC = self.spawn("BodyBlowTarget", self.pos);BC.Master = self;//this is works
				spawnLoot();
			}
		"####" NONON 10;
		"####" N 1;
		Goto Corpse;

	Death.Fire:
		FGUY A 0 A_setSize(radius, StandHeight);
		FGUY ABCDEF 3 bright light("FirePlace") {
				A_playsound("CultistBurns", CHAN_BODY, 1.0, true);
				A_Wander();
				BurnDeathCounter++;
			}
		"####" A 0 a_jumpIf(BurnDeathCounter>50, 2);
		Goto Death.Fire;

		FGUY GHIJKLMN 8 bright light("FirePlace");
		"####" A 0  { a_playSound("human/BodyFall"); a_stopSound(CHAN_BODY); burned = 1; A_setSize(16, 8); BDSM();}
		FGUY OPQRS 8 bright;
		FGUT T 0 setTag(N_BURNDEATHNAME);
		Goto Corpse;

	Death.Headshot:
			"####" A 0  a_stopSound(CHAN_BODY);
			BCUX T 10 a_playSound("gore/BloodSplash", CHAN_BODY);
			BCUX T 25 {
					A_SpawnItemEx("FanaticHeadFLy",0, 0, height, frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(8.0, 16.0), 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);
					for(int i = 0; i<random(5, 7); i++){
						A_SpawnItemEx("BloodTrail", random(-2, 2), random(-2, 2), random(-2, 2), frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION);
					}
				}

			BCUX IJ 8;
			BCUX KL 8 a_playSound("human/BodyFall");
			TNT1 A 0 {
				self.setTag(N_HEADSHOTED);
				actor BC = self.spawn("BodyBlowTarget", self.pos);BC.Master = self;
				spawnLoot();
			}
			BCUL MN 5;
			BCUL NONON 10;
			"####" "#" 0 A_SpawnItemEx("HeartHealth",0, 0, 0, 0, 0, 0, 0,SXF_NOCHECKPOSITION, 128 );
			Goto Corpse;
	XDeath:
		BCUL P 1 GiveInventory("GibDeathMark", 1);
		BCUL P 4 A_XScream;
		"####" P 0 {a_UnsetSolid(); self.GiveInventory("HumanXDeathGibs", 1); self.setTag(N_GIBDEATHNAME); }
		"####" QRSTUV 5;
		"####" V 1;
		Goto Corpse;

	Xdeath.Shells:

		BCUX U 1 { bNOPAIN = 1; GiveInventory("GibDeathMark", 1);}
		BCUX U 8;
		"####" "#" 0 {
				a_playSound("gore/BloodSplash");
				self.GiveInventory("HumanXDeathGibs", 1); self.setTag(N_GIBDEATHNAME);
				/*for(int i = 0; i<random(3, 5); i++){
					A_SpawnItemEx("BloodTrail", random(-2, 2), random(-2, 2), random(24, 32), frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);
				}*/
			}
		"####" "#" 0 {a_UnsetSolid();  self.setTag(N_GIBDEATHNAME); }
		"####" VW 8;
		"####" "#" 0 a_playSound("human/BodyFall");
		"####" YZ 5;
		Goto Corpse;
	Corpse:
		"####" "#" 1 {
			self.takeInventory("QuickKillReady", 1);
			self.takeInventory("SubordinatedReady", 1);
			A_setSize(16, 16);
			bSHOOTABLE = 1;
			//bSOLID = 1;
			bTHRUACTORS = 1;
			bGHOST = 1;
			if(!burned){
				self.giveInventory("Bleeder", 1);
			}
		}
		"####" "#" -1;
		Stop;
	Raise:
		BCUL NMLKJIH 4;
		Goto See;
  }
}













class CultistHead : DistanceSpawned
{

	Default
	{
	  health 30;
	  radius 8;
	  height 16;
	  Speed 10;
	  scale 0.5;
	  mass 60;


		+CANPASS;
		+CANPUSHWALLS;
		+CANUSEWALLS;
		+ACTIVATEMCROSS;

	  +SHOOTABLE;
	  +RANDOMIZE;
	  +PUSHABLE;

		painchance 255;
	}

	override int getRenderDistance(){ return RenderDistance;}

	Override void PostBeginPlay()
	{

		Super.PostBeginPlay();
		self.setTag(StringTable.Localize("$CULTISTHEAD_NAME"));
		RenderDistance = Cvar.FindCvar("monsters_render_radius").GetInt() ;
	}
	States
	{	SetSprite://for DistanceSpawned
		Spawn:
			GHED B 15	A_LookEx(LOF_NOSOUNDCHECK);
			goto See;
		See:
			"####" B 1  A_JumpIf(checkInventory("itemInHands", 1), "InHands");
			"####" B 1 A_JumpIfCloser(32,"Kick");
			goto spawn;

		InHands:
			"####" B 15 A_JumpIf(!checkInventory("itemInHands", 1), "Spawn");
			Loop;
		Pain:
			"####" B 2;
			goto spawn;
		Pain.Fire:
			"####" B 1 { self.giveInventory("Burner", 1); }
			goto spawn;
		Kick:

			"####" B 1 {
					A_FaceTarget();
					A_SetAngle(angle+180);
					A_PlaySound("zombie/cickHead");
					PlayerInfo players = players[consoleplayer];
					A_SpawnItemEX("CultistHeadFLy",0,0,6,10+3*players.mo.Vel.Z,0,fRandom(3,7));//jump to kick far
				}
			Goto Death.Silent;
		Death.Silent:
			"####" B 1;
			stop;
		Death.Fire:
			"####" B -1 { a_changeFlag("SHOOTABLE", 1); A_setSize(8, 16); self.setTag(StringTable.Localize("$ZOMBIEHEAD_BURNED"));}
			Stop;
		Death:
			TNT1 A 1 {
					a_playSound("gore/BloodSplash");
					for(int i = 0; i<5; i++){
						A_SpawnItemEx("BloodTrail", random(-2, 2), random(-2, 2), random(-2, 2), frandom(1.0, 2.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION);
					}
			}

			Stop;
	}
}

class fanaticHead : CultistHead
{
	States
	{	SetSprite://for DistanceSpawned
		Spawn:
			BHED B 15	A_LookEx(LOF_NOSOUNDCHECK);
			goto See;
		Kick:

			"####" B 1 {
					A_FaceTarget();
					A_SetAngle(angle+180);
					A_PlaySound("zombie/cickHead");
					PlayerInfo players = players[consoleplayer];
					A_SpawnItemEX("FanaticHeadFLy",0,0,6,10+3*players.mo.Vel.Z,0,fRandom(3,7), 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);//jump to kick far
				}
			Goto Death.Silent;
	}

}

class CultistHeadFLy : ZombieHead
{
	int RollSpeed;

	Default
	{
	  PROJECTILE;
	  Damage 0;
	  -NOGRAVITY;
	  +DOOMBOUNCE;
	  +BOUNCEONACTORS;
	  -CANBOUNCEWATER;
	  +FLOORCLIP;
	  +USEBOUNCESTATE;
		+ROLLSPRITE;
	}

	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		if(random(1, 0)){
			RollSpeed = Random(-40, 40);
		} else {
			RollSpeed = Random(-40, 40);
		}
	}


	States
	{	SetSprite://for DistanceSpawned
		Spawn:
			GHED A 2 A_SetRoll(roll+RollSpeed,SPF_INTERPOLATE);
			Loop;
		Pain.Fire:
			"####" A 1 {self.giveInventory("Burner", 1);}
			goto spawn;
		Bounce.Floor:
			"####" A 0 { a_playsound("gore/hit"); A_SetRoll(roll+RollSpeed,SPF_INTERPOLATE); }
			"####" A 1 A_SpawnItemEx("BloodTrail", random(-2, 2), random(-2, 2), random(-2, 2), frandom(-4.0, 4.0), frandom(-4.0, 4.0), frandom(1.0, 8.0), 0,SXF_NOCHECKPOSITION);
			Goto Spawn;
		Death:
			TNT1 A 1 {
				A_SpawnItemEx("CultistHead", 0, 0, 0, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
			}
			Stop;
	}
}

class FanaticHeadFLy : CultistHeadFLy
{
	States
	{
		SetSprite://for DistanceSpawned
		Spawn:
			BHED A 2 A_SetRoll(roll+RollSpeed,SPF_INTERPOLATE);
			Loop;
		Death:
			TNT1 A 1 {
				A_SpawnItemEx("fanaticHead",0, 0, 0, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION);
			}
			Stop;
	}
}









Class OneTNT : PlayerTNT
{
	default{
		-ThruSpecies;
		-DONTTHRUST;
		-DONTBLAST;
		//-NOBLOCKMAP;
		SeeSound "Cultists/Toss";
	}
	override void PostBeginPlay(){
		noWait = random(0,1);
	}
  states
  {

	Spawn:
		ADYN E 0  A_LoopActiveSound;
		goto see;
	See:
		ADYN ABCDEFGH 1  A_LoopActiveSound();
		Loop;
	Bounce:
		ADYN IJK 1;
		Loop;
	Death:
		TNT1 A 0 A_jumpIf(noWait, "Explode");
		Goto Crash;
	Crash:
		TNT1 A 0 A_jumpIf(noWait, "Explode");
		ADYN IJK 3 A_LoopActiveSound();
		Loop;
	XDeath:
		TNT1 A 0 A_jumpIf(noWait, "Explode");
		Goto Crash;
	Explode:
		TNT1 A 0 A_SpawnItemEx("ExplosionSmall",0,0,0, 0,0,0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS);
		stop;
  }

}